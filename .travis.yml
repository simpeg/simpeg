language: python

python:
  - 3.6
  - 2.7

sudo: false

addons:
  apt:
    packages:
    - gcc
    - gfortran
    - libblas-dev
    - liblapack-dev

env:
  global:
    - DEPLOY_DIR=tests/docs
    - MASTER_BRANCH=master
    - GAE_PROJECT=simpegdocs
    - DOCS_PY=2.7  # deploy docs from 2.7
    - PYPI_PY=3.6 # deploy to pypi from python 3.6

  matrix:
    # - TEST_DIR=tests/em/fdem/inverse/derivs
    # - TEST_DIR=tests/em/tdem
    # - TEST_DIR="tests/em/static tests/seis tests/base"
    # - TEST_DIR=tests/flow
    # - TEST_DIR="tests/em/nsem/forward tests/em/nsem/inversion"
    # - TEST_DIR=tests/em/fdem/inverse/adjoint
    # - TEST_DIR=tests/em/fdem/forward
    # - TEST_DIR=tests/em/vrm
    # - TEST_DIR=tests/pf
    - TEST_DIR=tests/docs;
      GAE_PYTHONPATH=${HOME}/.cache/google_appengine;
      PATH=$PATH:${HOME}/google-cloud-sdk/bin;
      PYTHONPATH=${PYTHONPATH}:${GAE_PYTHONPATH};
      CLOUDSDK_CORE_DISABLE_PROMPTS=1


# Setup anaconda
before_install:
# Install packages
  - if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then
      wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - chmod +x miniconda.sh
  - ./miniconda.sh -b -p $HOME/miniconda
  - export PATH=/home/travis/anaconda/bin:/home/travis/miniconda/bin:$PATH
  - conda update --yes conda

install:
  - if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then
      conda install --quiet --yes pip python=$TRAVIS_PYTHON_VERSION numpy scipy matplotlib cython ipython h5py vtk;
    else
      conda install --quiet --yes pip python=$TRAVIS_PYTHON_VERSION numpy scipy matplotlib cython ipython h5py;
    fi

  - pip install -r requirements_dev.txt
  - python setup.py install
  - if [ "$TEST_DIR" = "$DEPLOY_DIR" -a ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then
      if [ ! -d ${HOME}/google-cloud-sdk ]; then curl https://sdk.cloud.google.com | bash; fi ;
      openssl aes-256-cbc -K $encrypted_7e0a8632ac3f_key -iv $encrypted_7e0a8632ac3f_iv -in credentials.tar.gz.enc -out credentials.tar.gz -d ;
      tar -xzf credentials.tar.gz ;
      gcloud auth activate-service-account --key-file credentials/client-secret-docs.json ;
      gsutil cp gs://simpeg/_build.tar.gz $PWD/docs ;
      gsutil cp gs://simpeg/examples.tar.gz $PWD/docs/content ;
      cd docs ;
      tar -xzf _build.tar.gz _build;
      cd content ;
      tar -xzf examples.tar.gz examples;
      cd ../../ ;
    fi

# Run test
script:
  # - nosetests $TEST_DIR --with-cov --cov SimPEG --cov-config .coveragerc -v -s
  - if [ "$TEST_DIR" = "$DEPLOY_DIR" -a ${TRAVIS_PYTHON_VERSION:0:1} == "3" ]; then
      cd docs; make html-noplot ; cd ../ ;
    else
      nosetests $TEST_DIR --with-cov --cov SimPEG --cov-config .coveragerc -v -s;
    fi


# Calculate coverage
after_success:
  - bash <(curl -s https://codecov.io/bash)

  # early exit if not on a deplotment branch
  - if ! [ "$TRAVIS_BRANCH" = "$MASTER_BRANCH" -o "$TRAVIS_TAG" = "true" ]; then
      echo "Not deploying (because this is not a deployment branch)" ;
      exit 0 ;
    fi
  - if ! [ "$TEST_DIR" = "$DEPLOY_DIR" ]; then
      echo "Not deploying (because this is not a deployment directory)" ;
      exit 0 ;
    fi
  - if ! [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
      echo "Not deploying (because this is a pull request)" ;
      exit 0 ;
    fi

  # deploy docs
  - if [ $TRAVIS_PYTHON_VERSION == $DOCS_PY ]; then
      if [ "$TRAVIS_BRANCH" = "$MASTER_BRANCH" ]; then
        cd docs; tar -cvzf _build.tar.gz _build ;
        cd content; tar -cvzf examples.tar.gz examples ; cd ../../ ;
        gsutil cp docs/_build.tar.gz gs://simpeg ;
        gsutil cp docs/content/examples.tar.gz gs://simpeg ;
        gcloud auth activate-service-account --key-file credentials/client-secret.json ;
        export GAE_PROJECT=$GAE_PROJECT ;
      fi ;
      gcloud config set project $GAE_PROJECT;
      gcloud app deploy ./docs/app.yaml --version ${TRAVIS_COMMIT} --promote;
    fi;

  #deploy to pypi
  - if [ $TRAVIS_PYTHON_VERSION == $PYPI_PY ]; then
      if [ "$TRAVIS_TAG" = "true" ]; then
        mv credentials/.pypirc ~/.pypirc ;
        python setup.py sdist bdist_wheel --universal ;
        travis_wait 20 twine upload -r pypi --skip-existing dist/* ;
      fi
    fi

notifications:
  slack: simpeg:1KZq5giMtlJJ58TijIPgqf7n
